new string var_name;
new int var_name2;
new int var_name5;
new int [12] var;
new string var2;
new int [5] var_name3;
expr $var_name2 52153;
expr $var_name5 12;
new int [$var_name5] var_name4;

expr $var_name4 425;
expr $var_name3 3333;
expr $var2 "abc";
expr $var_name4 $var_name2;
expr $var_name4 $var2;

expr $var $var_name2 + $var_name4;
expr $var $var_name2 - $var_name4;
expr $var $var_name2 ~ $var_name4;
expr $var $var_name2 * 258;
expr $var $var_name2 / 258;
expr $var $var_name2 % 258;
expr $var $var_name3 - 1;
expr $var $var_name3 - 5;
expr $var 5 - $var;
expr $var 5 - 4;

while $var {
};

if $var {
};

func Func_1 1 var1 {
    new int [5] int_var;
    new int int_var2;
    expr $int_var 5;
    expr $int_var2 0;
    while $int_var {
        expr $int_var $int_var - 1;
    };
    return $var;
};

func FaktRec 3 var1 var2 counter {
    if $counter {
        new int ans;
        new int n_var1;
        new int n_var2;
        new int n_counter;
        expr $n_var2 $var1;
        expr $n_var1 $var1 + $var2;
        expr $n_counter $counter - 1;
        call $ans FaktRec $n_var1 $n_var2 $n_counter;
        return $ans;
    };
    return $var1;
};

func FakIter 1 counter {
    new int var1;
    new int var2;
    new int temp;
    expr $var1 1;
    expr $var2 1;
    new int counter;
    while $counter {
        expr $temp $var1;
        expr $var1 $var1 + $var2;
        expr $var2 $temp;
        expr $counter $counter - 1;
    };
    return $var1;
};

call $var0 Func_1 $var1 $var2;
call $var0 Func_1 "var1" $var2;
call $var0 Func_1 $var1 5;
